// Test Google Custom Search API with different approaches
const dotenv = require('dotenv');
dotenv.config({ path: '.env' });

async function testSimpleSearch() {
  const searchApiKey = process.env.SEARCH_API_KEY;
  
  console.log('üîë Testing Google Custom Search API (Simple approach)');
  console.log('Search API Key:', searchApiKey ? '‚úÖ Present' : '‚ùå Missing');
  
  if (!searchApiKey) {
    console.log('‚ùå SEARCH_API_KEY not found in environment variables');
    return;
  }
  
  const testQuery = 'weather today';
  
  // Try different search engine IDs
  const searchEngineIds = [
    '017576662512468239146:omuauf_lfve', // Original from docs
    'partner-pub-4485203643434653:9582345732', // Alternative general search
    '000455696194071821846:1rugqfxm_xq', // Another common one
  ];
  
  for (const searchEngineId of searchEngineIds) {
    console.log(`\nüîç Testing with Search Engine ID: ${searchEngineId}`);
    console.log(`üîç Query: "${testQuery}"`);
    
    const searchUrl = `https://www.googleapis.com/customsearch/v1?key=${searchApiKey}&cx=${searchEngineId}&q=${encodeURIComponent(testQuery)}&num=3`;
    
    try {
      const response = await fetch(searchUrl);
      console.log('üìä Response status:', response.status, response.statusText);
      
      if (!response.ok) {
        const errorText = await response.text();
        console.log('‚ùå Error response:', errorText);
        continue;
      }
      
      const data = await response.json();
      console.log('‚úÖ Search successful!');
      console.log('üìä Results found:', data.items?.length || 0);
      
      if (data.items && data.items.length > 0) {
        console.log('\nüìã WORKING SEARCH ENGINE FOUND! ‚úÖ');
        console.log('üéØ Working Search Engine ID:', searchEngineId);
        console.log('\nüìã Sample results:');
        data.items.slice(0, 2).forEach((item, index) => {
          console.log(`${index + 1}. ${item.title}`);
          console.log(`   ${item.snippet?.substring(0, 150)}...`);
          console.log(`   ${item.link}\n`);
        });
        
        console.log(`\nüîß Add this to your .env file:`);
        console.log(`SEARCH_ENGINE_ID=${searchEngineId}`);
        return; // Found working one, exit
      } else {
        console.log('‚ö†Ô∏è No results found');
        if (data.searchInformation) {
          console.log('üîç Search info:', data.searchInformation.totalResults, 'total results');
        }
      }
      
    } catch (error) {
      console.log('üí• Error:', error.message);
    }
  }
  
  console.log('\n‚ùå None of the test search engines returned results.');
  console.log('üõ†Ô∏è You need to create your own Custom Search Engine:');
  console.log('1. Go to https://programmablesearchengine.google.com/');
  console.log('2. Create a new search engine');
  console.log('3. Set it to search the entire web (use "*" as the site)');
  console.log('4. Copy the Search Engine ID to your .env file');
}

testSimpleSearch(); 